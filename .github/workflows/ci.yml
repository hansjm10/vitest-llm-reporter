name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, master]
  push:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Enable debug logging'
        required: false
        default: 'false'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        node-version: [18, 20, 22]
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js and install dependencies
        uses: ./.github/actions/setup
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run tests
        run: npm test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.node-version }}
          path: |
            test-results/
            coverage/
          retention-days: 7
          if-no-files-found: ignore

  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js and install dependencies
        uses: ./.github/actions/setup

      - name: Run linting
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js and install dependencies
        uses: ./.github/actions/setup

      - name: Run type checking
        run: npm run type-check

  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js and install dependencies
        uses: ./.github/actions/setup

      - name: Build package
        run: npm run build

      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Build failed: dist directory not found"
            exit 1
          fi
          echo "✅ Build successful"

  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js and install dependencies
        uses: ./.github/actions/setup

      - name: Install coverage dependencies
        run: npm install --save-dev @vitest/coverage-v8

      - name: Run tests with coverage
        run: npm run coverage || true

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7
          if-no-files-found: warn

      - name: Coverage summary comment
        uses: actions/github-script@v8
        if: github.event_name == 'pull_request'
        continue-on-error: true
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            try {
              const coveragePath = path.join(process.cwd(), 'coverage', 'coverage-summary.json');

              if (fs.existsSync(coveragePath)) {
                const coverage = JSON.parse(fs.readFileSync(coveragePath, 'utf8'));
                const total = coverage.total;

                const comment = `## 📊 Coverage Report

                | Metric | Coverage |
                |--------|----------|
                | Lines | ${total.lines.pct}% |
                | Statements | ${total.statements.pct}% |
                | Functions | ${total.functions.pct}% |
                | Branches | ${total.branches.pct}% |

                ${total.lines.pct < 80 ? '⚠️ Coverage is below 80% threshold' : '✅ Coverage meets threshold'}`;

                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              }
            } catch (error) {
              console.log('Coverage comment failed:', error.message);
            }

  changeset:
    name: Changeset Check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name == 'pull_request' && !startsWith(github.head_ref, 'changeset-release/')
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node.js and install dependencies
        uses: ./.github/actions/setup

      - name: Ensure changeset added
        run: npm run changeset status
